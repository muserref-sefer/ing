import "./chunk-JVWSFFO4.js";

// node_modules/pwa-helpers/connect-mixin.js
var connect = (store) => (baseElement) => class extends baseElement {
  connectedCallback() {
    if (super.connectedCallback) {
      super.connectedCallback();
    }
    this._storeUnsubscribe = store.subscribe(() => this.stateChanged(store.getState()));
    this.stateChanged(store.getState());
  }
  disconnectedCallback() {
    this._storeUnsubscribe();
    if (super.disconnectedCallback) {
      super.disconnectedCallback();
    }
  }
  /**
   * The `stateChanged(state)` method will be called when the state is updated.
   */
  stateChanged(_state) {
  }
};

// node_modules/pwa-helpers/lazy-reducer-enhancer.js
var lazyReducerEnhancer = (combineReducers) => {
  const enhancer = (nextCreator) => {
    return (origReducer, preloadedState) => {
      let lazyReducers = {};
      const nextStore = nextCreator(origReducer, preloadedState);
      return Object.assign({}, nextStore, { addReducers(newReducers) {
        const combinedReducerMap = Object.assign({}, lazyReducers, newReducers);
        this.replaceReducer(combineReducers(lazyReducers = combinedReducerMap));
      } });
    };
  };
  return enhancer;
};

// node_modules/pwa-helpers/media-query.js
var installMediaQueryWatcher = (mediaQuery, layoutChangedCallback) => {
  let mql = window.matchMedia(mediaQuery);
  mql.addListener((e) => layoutChangedCallback(e.matches));
  layoutChangedCallback(mql.matches);
};

// node_modules/pwa-helpers/metadata.js
var updateMetadata = ({ title, description, url, image, imageAlt }) => {
  if (title) {
    document.title = title;
    setMetaTag("property", "og:title", title);
  }
  if (description) {
    setMetaTag("name", "description", description);
    setMetaTag("property", "og:description", description);
  }
  if (image) {
    setMetaTag("property", "og:image", image);
  }
  if (imageAlt) {
    setMetaTag("property", "og:image:alt", imageAlt);
  }
  url = url || window.location.href;
  setMetaTag("property", "og:url", url);
};
function setMetaTag(attrName, attrValue, content) {
  let element = document.head.querySelector(`meta[${attrName}="${attrValue}"]`);
  if (!element) {
    element = document.createElement("meta");
    element.setAttribute(attrName, attrValue);
    document.head.appendChild(element);
  }
  element.setAttribute("content", content || "");
}

// node_modules/pwa-helpers/network.js
var installOfflineWatcher = (offlineUpdatedCallback) => {
  window.addEventListener("online", () => offlineUpdatedCallback(false));
  window.addEventListener("offline", () => offlineUpdatedCallback(true));
  offlineUpdatedCallback(navigator.onLine === false);
};

// node_modules/pwa-helpers/router.js
var installRouter = (locationUpdatedCallback) => {
  document.body.addEventListener("click", (e) => {
    if (e.defaultPrevented || e.button !== 0 || e.metaKey || e.ctrlKey || e.shiftKey)
      return;
    const anchor = e.composedPath().filter((n) => n.tagName === "A")[0];
    if (!anchor || anchor.target || anchor.hasAttribute("download") || anchor.getAttribute("rel") === "external")
      return;
    const href = anchor.href;
    if (!href || href.indexOf("mailto:") !== -1)
      return;
    const location = window.location;
    const origin = location.origin || location.protocol + "//" + location.host;
    if (href.indexOf(origin) !== 0)
      return;
    e.preventDefault();
    if (href !== location.href) {
      window.history.pushState({}, "", href);
      locationUpdatedCallback(location, e);
    }
  });
  window.addEventListener("popstate", (e) => locationUpdatedCallback(window.location, e));
  locationUpdatedCallback(
    window.location,
    null
    /* event */
  );
};
export {
  connect,
  installMediaQueryWatcher,
  installOfflineWatcher,
  installRouter,
  lazyReducerEnhancer,
  setMetaTag,
  updateMetadata
};
/*! Bundled license information:

pwa-helpers/connect-mixin.js:
  (**
  @license
  Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  *)

pwa-helpers/lazy-reducer-enhancer.js:
  (**
  @license
  Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  *)

pwa-helpers/media-query.js:
  (**
  @license
  Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  *)

pwa-helpers/metadata.js:
  (**
  @license
  Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  *)

pwa-helpers/network.js:
  (**
  @license
  Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  *)

pwa-helpers/router.js:
  (**
  @license
  Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  *)

pwa-helpers/pwa-helpers.js:
  (**
  @license
  Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  *)
*/
//# sourceMappingURL=pwa-helpers.js.map
